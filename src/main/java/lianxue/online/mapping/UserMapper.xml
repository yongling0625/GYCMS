<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lianxue.online.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="lianxue.online.model.User">
		<!-- WARNING - @mbggenerated -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="loginname" property="loginname" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="TINYINT" />
		<result column="age" property="age" jdbcType="TINYINT" />
		<result column="usertype" property="usertype" jdbcType="TINYINT" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="organization_id" property="organizationId"
			jdbcType="INTEGER" />
		<result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="userVoResultMap" type="lianxue.online.vo.UserVo">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="loginname" property="loginname" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="TINYINT" />
		<result column="age" property="age" jdbcType="TINYINT" />
		<result column="usertype" property="usertype" jdbcType="TINYINT" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="organization_id" property="organizationId"
			jdbcType="INTEGER" />
		<result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />

		<result column="organizationName" property="organizationName"
			jdbcType="VARCHAR" />

		<collection property="rolesList" ofType="lianxue.online.model.Role">
			<id column="roleId" property="id" />
			<result column="roleName" property="name" />
		</collection>
	</resultMap>

	<select id="findUserVoById" resultMap="userVoResultMap"
		parameterType="java.lang.Long">
		SELECT
		t.id,
		loginname,
		t.`name`,
		`password`,
		sex,
		age,
		usertype,
		t.`status`,
		organization_id,
		t.createdate,
		phone,
		s.`name` AS organizationName,
		o.id
		AS roleId,
		o.`name` AS roleName
		FROM
		user t
		LEFT JOIN user_role r ON t.id
		= r.user_id
		LEFT JOIN role o ON r.role_id = o.id
		LEFT JOIN organization
		s ON s.id = t.organization_id
		<where>
			t.id = #{id}
		</where>
	</select>

	<select id="findUserPageCondition" resultMap="userVoResultMap"
		parameterType="java.util.Map">
		SELECT
		t.id,
		loginname,
		t.`name`,
		`password`,
		sex,
		age,
		usertype,
		t.`status`,
		organization_id,
		t.createdate,
		phone,
		s.`name` AS organizationName,
		o.id
		AS roleId,
		o.`name` AS roleName
		FROM
		user t
		LEFT JOIN user_role r ON t.id
		= r.user_id
		LEFT JOIN role o ON r.role_id = o.id
		LEFT JOIN organization
		s ON s.id = t.organization_id
		<where>
			<if test="name != null">
				t.name = #{name}
			</if>
			<if test="organizationId != null">
				and t.organization_id = #{organizationId}
			</if>
			<if test="startTime != null">
                <![CDATA[
            and t.createdate >= #{startTime}
           ]]>
			</if>
			<if test="endTime != null">
                <![CDATA[
            and t.createdate <= #{endTime}
        		]]>
			</if>
		</where>
	</select>
</mapper>